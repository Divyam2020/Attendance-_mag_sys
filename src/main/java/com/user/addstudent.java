/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.user;

import java.awt.HeadlessException;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

import org.apache.poi.ss.formula.functions.T;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author divya
 */
public final class addstudent extends javax.swing.JInternalFrame {

    /**
     * Creates new form add student
     *
     * @throws java.sql.SQLException
     */
    public addstudent() throws SQLException {
        initComponents();
        tableupdate();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
    }
    Connection con;
    PreparedStatement ps;
    ResultSet rs;

    /**
     * @throws SQLException
     */
    public void tableupdate() throws SQLException {
        int c;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/attendance_ms", "root", "");
            ps = con.prepareStatement("select * from student_tb");

            rs = ps.executeQuery();
            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel) tbladdstd.getModel();
            dft.setRowCount(0);
            while (rs.next()) {
                Vector<String> v2 = new Vector<String>();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("rollno"));
                    v2.add(rs.getString("department"));
                    v2.add(rs.getString("semester"));
                    v2.add(rs.getString("subject1"));
                    v2.add(rs.getString("subject2"));
                    v2.add(rs.getString("subject3"));
                    v2.add(rs.getString("subject4"));
                    v2.add(rs.getString("subject5"));
                }
                dft.addRow(v2);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(addstudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField20 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtsubject5 = new javax.swing.JTextField();
        txtrollno = new javax.swing.JTextField();
        txtsubject1 = new javax.swing.JTextField();
        txtsubject4 = new javax.swing.JTextField();
        comsem = new javax.swing.JComboBox<>();
        comdept = new javax.swing.JComboBox<>();
        btndelete = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        importExcel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbladdstd = new javax.swing.JTable();
        savetodb = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtsubject2 = new javax.swing.JTextField();
        txtsubject3 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();

        jTextField20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(852, 580));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setText("name :");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel26.setText("roll no :");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel27.setText("subject3:");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel28.setText("subject1:");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel29.setText("subject2:");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setText("subject4:");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel31.setText("semester :");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel32.setText("department :");

        txtname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        txtsubject5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtsubject5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsubject5ActionPerformed(evt);
            }
        });

        txtrollno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtrollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrollnoActionPerformed(evt);
            }
        });

        txtsubject1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtsubject1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsubject1ActionPerformed(evt);
            }
        });

        txtsubject4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtsubject4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsubject4ActionPerformed(evt);
            }
        });

        comsem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comsem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "I", "II", "III", "IV", "V", "VI" }));

        comdept.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comdept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "BCA", "CS" }));
        comdept.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                comdeptComponentMoved(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnedit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnsave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        importExcel.setText("Import (Excel)");
        importExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importExcelActionPerformed(evt);
            }
        });

        tbladdstd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "name", "roll no", "department", "semester", "subject 1", "subject 2", "subject 3", "subject 4", "subject 5"
            }
        ) {
            Class<T>[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class<T> getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbladdstd.setDragEnabled(true);
        tbladdstd.setName(""); // NOI18N
        tbladdstd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbladdstdMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbladdstd);

        jScrollPane1.setViewportView(jScrollPane8);

        savetodb.setText("Save to DB");
        savetodb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savetodbActionPerformed(evt);
            }
        });

        jButton1.setText("Clear Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtsubject2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtsubject2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsubject2ActionPerformed(evt);
            }
        });

        txtsubject3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtsubject3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsubject3ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel33.setText("subject5:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtrollno, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comdept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel29))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtsubject2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(txtsubject3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtsubject5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtsubject4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnedit)
                                .addGap(62, 62, 62)
                                .addComponent(btndelete)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtsubject1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(207, 207, 207)
                                .addComponent(importExcel))
                            .addComponent(comsem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jButton1)
                .addGap(91, 91, 91)
                .addComponent(savetodb)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtrollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txtsubject2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(txtsubject4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtsubject3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33)
                            .addComponent(txtsubject5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comdept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(comsem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(txtsubject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnedit)
                            .addComponent(btnsave)
                            .addComponent(btndelete))
                        .addGap(26, 26, 26)
                        .addComponent(importExcel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(savetodb)
                    .addComponent(jButton1))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtsubject5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsubject5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsubject5ActionPerformed

    private void txtrollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrollnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrollnoActionPerformed

    private void txtsubject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsubject1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsubject1ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void txtsubject4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsubject4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsubject4ActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int dialogresult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record", "Warning", JOptionPane.YES_NO_OPTION);
        if (dialogresult == JOptionPane.YES_NO_OPTION) {
            try {
                String rollno = txtrollno.getText();
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/attendance_ms", "root", "");
                PreparedStatement ps = con.prepareStatement("DELETE FROM `student_tb` WHERE rollno=?");

                ps.setString(1, rollno);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "deleted successfully");

                txtname.setText("");
                txtrollno.setText("");
                comdept.setSelectedItem("select");
                comsem.setSelectedItem("select");
                txtsubject1.setText("");
                txtsubject2.setText("");
                txtsubject3.setText("");
                txtsubject4.setText("");
                txtsubject5.setText("");

                tableupdate();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(addstudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        if (comdept.getSelectedItem().equals("select")) {
            JOptionPane.showMessageDialog(this, "please select your department");
            comdept.setSelectedItem("select");
            comdept.grabFocus();
        } else if (comsem.getSelectedItem().equals("select")) {
            JOptionPane.showMessageDialog(this, "please select your semester");
            comsem.setSelectedItem("select");
            comsem.grabFocus();
        } else {
            try {
                String name = txtname.getText();
                String rollno = txtrollno.getText();
                String department = (String) comdept.getSelectedItem();
                String semester = (String) comsem.getSelectedItem();
                String subject1 = txtsubject1.getText();
                String subject2 = txtsubject2.getText();
                String subject3 = txtsubject3.getText();
                String subject4 = txtsubject4.getText();
                String subject5 = txtsubject5.getText();
                
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/attendance_ms", "root", "");
                ps = con.prepareStatement("UPDATE `student_tb` SET name=?,fname=?,phone=?,email=?,department=?,semester=?,address=? WHERE rollno=?");

                ps.setString(1, name);
                ps.setString(2, rollno);
                ps.setString(3, department);
                ps.setString(4, semester);
                ps.setString(5, subject1);
                ps.setString(6, subject2);
                ps.setString(7, subject3);
                ps.setString(8, subject4);
                ps.setString(9, subject5);
                
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "edited successfully");

                txtname.setText("");
                txtrollno.setText("");
                comdept.setSelectedItem("select");
                comsem.setSelectedItem("select");                
                txtsubject1.setText("");
                txtsubject2.setText("");
                txtsubject3.setText("");
                txtsubject4.setText("");
                txtsubject5.setText("");
                
                tableupdate();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(addstudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btneditActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        if (txtname.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter your name");
            txtname.setText("");
            txtname.grabFocus();
        } else if (txtrollno.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter your roll no ");
            txtrollno.setText("");
            txtrollno.grabFocus();
        } else if (comdept.getSelectedItem().equals("select")) {
            JOptionPane.showMessageDialog(this, "please select your department");
            comdept.setSelectedItem("select");
            comdept.grabFocus();
        } else if (comsem.getSelectedItem().equals("select")) {
            JOptionPane.showMessageDialog(this, "please select your semester");
            comsem.setSelectedItem("select");
            comsem.grabFocus();
        } else if (txtsubject1.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter subject 1");
            txtsubject1.setText("");
            txtsubject1.grabFocus();
        } else if (txtsubject2.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter subject 2");
            txtsubject2.setText("");
            txtsubject2.grabFocus();
        } else if (txtsubject3.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter subject 3");
            txtsubject3.setText("");
            txtsubject3.grabFocus();
        } else if (txtsubject4.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter subject 4");
            txtsubject4.setText("");
            txtsubject4.grabFocus();
        }  else if (txtsubject5.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "please enter subject 5");
            txtsubject5.setText("");
            txtsubject5.grabFocus();
        } else {
            try {
                String name = txtname.getText();
                String rollno = txtrollno.getText();
                String department = (String) comdept.getSelectedItem();
                String semester = (String) comsem.getSelectedItem();                
                String subject1 = txtsubject1.getText();
                String subject2 = txtsubject2.getText();
                String subject3 = txtsubject3.getText();
                String subject4 = txtsubject4.getText();
                String subject5 = txtsubject5.getText();
                
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/attendance_ms", "root", "");
                ps = con.prepareStatement("insert into student_tb(name,rollno,department,semester,subject1,subject2,subject3,subject4,subject5)value(?,?,?,?,?,?,?,?,?)");
                ps.setString(1, name);
                ps.setString(2, rollno);
                ps.setString(3, department);
                ps.setString(4, semester);
                ps.setString(5, subject1);
                ps.setString(6, subject2);
                ps.setString(7, subject3);
                ps.setString(8, subject4);
                ps.setString(9, subject5);

                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "your data is saved successfully");

                txtname.setText("");
                txtrollno.setText("");
                comdept.setSelectedItem("Select");
                comsem.setSelectedItem("Select");
                txtsubject1.setText("");
                txtsubject2.setText("");
                txtsubject3.setText("");
                txtsubject4.setText("");
                txtsubject5.setText("");
                
                tableupdate();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(addstudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void comdeptComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_comdeptComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_comdeptComponentMoved

    private void tbladdstdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbladdstdMouseClicked
        DefaultTableModel model = (DefaultTableModel) tbladdstd.getModel();
        int selectedIndex = tbladdstd.getSelectedRow();

        txtname.setText(model.getValueAt(selectedIndex, 0).toString());
        txtrollno.setText(model.getValueAt(selectedIndex, 1).toString());
        comdept.setSelectedItem(model.getValueAt(selectedIndex, 2).toString());
        comsem.setSelectedItem(model.getValueAt(selectedIndex, 3).toString());
        txtsubject1.setText(model.getValueAt(selectedIndex, 4).toString());
        txtsubject2.setText(model.getValueAt(selectedIndex, 5).toString());
        txtsubject3.setText(model.getValueAt(selectedIndex, 6).toString());
        txtsubject4.setText(model.getValueAt(selectedIndex, 7).toString());
        txtsubject5.setText(model.getValueAt(selectedIndex, 8).toString());
        
    }//GEN-LAST:event_tbladdstdMouseClicked

    private void importExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importExcelActionPerformed

        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;
        //Select Default Path
        String defaultCurrentDirectoryPath = "C:\\Users\\divya\\Desktop";
        JFileChooser excelFileChooser = new JFileChooser(defaultCurrentDirectoryPath);
        //Filter Only Excel Files
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        //Set Dialog Tiles
        excelFileChooser.setDialogTitle("Select Excel Files");
        int excelChooser = excelFileChooser.showOpenDialog(null);

        //If Open Button is clicked
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);
                org.apache.poi.xssf.usermodel.XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);

                for (int row = 1; row <= excelSheet.getLastRowNum(); row++) {
                    XSSFRow excelRow = excelSheet.getRow(row);

                    XSSFCell excelname = excelRow.getCell(0);
                    XSSFCell excelrollno = excelRow.getCell(1);
                    XSSFCell exceldepartment = excelRow.getCell(2);
                    XSSFCell excelsemester = excelRow.getCell(3);
                    XSSFCell excelsubject1 = excelRow.getCell(4);
                    XSSFCell excelsubject2 = excelRow.getCell(5);
                    XSSFCell excelsubject3 = excelRow.getCell(6);
                    XSSFCell excelsubject4 = excelRow.getCell(7);
                    XSSFCell excelsubject5 = excelRow.getCell(8);                    
                    
                    System.out.println(excelname);
                    System.out.println(excelrollno);
                    System.out.println(exceldepartment);
                    System.out.println(excelsemester);
                    System.out.println(excelsubject1);
                    System.out.println(excelsubject2);
                    System.out.println(excelsubject3);
                    System.out.println(excelsubject4);
                    System.out.println(excelsubject5);
                    
                    //resize images but we do not have images in our excel file
 //                      JLabel excelJL = new JLabel(new ImageIcon(excelImage.toString()).getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH));
                    DefaultTableModel model = (DefaultTableModel)tbladdstd.getModel();
                    model.addRow(new Object[]{excelname, excelrollno, exceldepartment, excelsemester, excelsubject1, excelsubject2, excelsubject3, excelsubject4, excelsubject5});
                    /*                   for (int column = 0; column < excelRow.getLastCellNum(); column++){
                        XSSFCell excelCell = excelRow.getCell(column);
                        
                        System.out.println(excelCell.getStringCellValue());
                    }*/
                }

                JOptionPane.showMessageDialog(null, "Imported Successfully!");
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
//            } finally {
//
//                try {
//                    if (excelFIS != null) {
//                        excelFIS.close();
//                    }
//                    if (excelBIS != null) {
//                        excelBIS.close();
//                    }
//                    if (excelJTableImport != null) {
//                        excelJTableImport.close();
//                    }
//                } catch (IOException iOException) {
//                    JOptionPane.showMessageDialog(null, iOException.getMessage());
//                }
//
//            }
        }

    }//GEN-LAST:event_importExcelActionPerformed
    }
    private void savetodbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savetodbActionPerformed
      DefaultTableModel model = (DefaultTableModel) tbladdstd.getModel();
      if(model.getRowCount()==0){
          JOptionPane.showMessageDialog(this, "Table is empty");
      }else{
          try{
          Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/attendance_ms", "root", "");
               for(int i=0;i<model.getRowCount();i++){
                  String name = model.getValueAt(i, 0).toString();
                  String rollno = model.getValueAt(i, 1).toString();
                  String department = model.getValueAt(i, 2).toString();
                  String semester = model.getValueAt(i, 3).toString();
                  String subject1 = model.getValueAt(i, 4).toString();
                  String subject2 = model.getValueAt(i, 5).toString();
                  String subject3 = model.getValueAt(i, 6).toString();
                  String subject4 = model.getValueAt(i, 7).toString();
                  String subject5 = model.getValueAt(i, 8).toString();
                  
                  
                  ps = con.prepareStatement("insert into student_tb(name,rollno,department,semester,subject1,subject2,subject3,subject4,subject5)value(?,?,?,?,?,?,?,?,?)");
                ps.setString(1, name);
                ps.setString(2, rollno);
                ps.setString(3, department);
                ps.setString(4, semester);
                ps.setString(5, subject1);
                ps.setString(6, subject2);
                ps.setString(7, subject3);               
                ps.setString(8, subject4);
                ps.setString(9, subject5);

                ps.execute();
               }
               JOptionPane.showMessageDialog(this, "Data inserted successfully...");
               //clear table
               model.setRowCount(0);
      }
          catch(HeadlessException | ClassNotFoundException | SQLException e){
          
          }
      }
    }//GEN-LAST:event_savetodbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbladdstd.getModel();
        model.setRowCount(0);


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtsubject2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsubject2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsubject2ActionPerformed

    private void txtsubject3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsubject3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsubject3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox<String> comdept;
    private javax.swing.JComboBox<String> comsem;
    private javax.swing.JButton importExcel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JButton savetodb;
    private javax.swing.JTable tbladdstd;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtrollno;
    private javax.swing.JTextField txtsubject1;
    private javax.swing.JTextField txtsubject2;
    private javax.swing.JTextField txtsubject3;
    private javax.swing.JTextField txtsubject4;
    private javax.swing.JTextField txtsubject5;
    // End of variables declaration//GEN-END:variables

}
